/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package main.memoire.app;

import java.awt.HeadlessException;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author ZUHROH
 */
public class WritingFrame extends javax.swing.JFrame {
    // This is the field that tracks the ID of the current memo
    private int currentMemoireId = 0;
    
    public WritingFrame() {
        initComponents();
        setSize(550, 600);
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        topPanel = new javax.swing.JPanel();
        dateTimeInfoLabel = new javax.swing.JLabel();
        saveBtn = new javax.swing.JButton();
        bodyPanel = new javax.swing.JPanel();
        categoryPanel = new javax.swing.JPanel();
        categoryLabel = new javax.swing.JLabel();
        categoryCombox = new javax.swing.JComboBox<>();
        memoireTxtPaneHelpPanel = new javax.swing.JPanel();
        memoireScrollPane = new javax.swing.JScrollPane();
        memoireTxtPane = new javax.swing.JTextPane();
        titleTxtField = new javax.swing.JTextField();
        separator3 = new javax.swing.JSeparator();
        separator4 = new javax.swing.JSeparator();
        editorPanel = new javax.swing.JPanel();
        imageBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("MÃ‰moire  ");

        topPanel.setBackground(new java.awt.Color(255, 241, 214));
        topPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(2, 2, 2, 2));
        topPanel.setPreferredSize(new java.awt.Dimension(550, 48));
        topPanel.setLayout(new java.awt.BorderLayout());

        dateTimeInfoLabel.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        dateTimeInfoLabel.setForeground(new java.awt.Color(211, 211, 211));
        dateTimeInfoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/schedule.png"))); // NOI18N
        dateTimeInfoLabel.setText("date.time.info");
        dateTimeInfoLabel.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 5, 10, 5));
        topPanel.add(dateTimeInfoLabel, java.awt.BorderLayout.CENTER);

        saveBtn.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        saveBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/check.png"))); // NOI18N
        saveBtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        saveBtn.setBorderPainted(false);
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });
        topPanel.add(saveBtn, java.awt.BorderLayout.EAST);

        getContentPane().add(topPanel, java.awt.BorderLayout.NORTH);

        bodyPanel.setBackground(new java.awt.Color(255, 241, 214));
        bodyPanel.setPreferredSize(new java.awt.Dimension(500, 2));
        bodyPanel.setLayout(new java.awt.GridBagLayout());

        categoryPanel.setOpaque(false);

        categoryLabel.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        categoryLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/label.png"))); // NOI18N
        categoryLabel.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        categoryPanel.add(categoryLabel);

        categoryCombox.setEditable(true);
        categoryCombox.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        categoryCombox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No Category" }));
        categoryCombox.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 241, 214)));
        categoryCombox.setName(""); // NOI18N
        categoryPanel.add(categoryCombox);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        bodyPanel.add(categoryPanel, gridBagConstraints);

        memoireTxtPaneHelpPanel.setBackground(new java.awt.Color(255, 255, 255));
        memoireTxtPaneHelpPanel.setLayout(new java.awt.GridLayout(1, 0));

        memoireTxtPane.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        memoireScrollPane.setViewportView(memoireTxtPane);

        memoireTxtPaneHelpPanel.add(memoireScrollPane);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        bodyPanel.add(memoireTxtPaneHelpPanel, gridBagConstraints);

        titleTxtField.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        bodyPanel.add(titleTxtField, gridBagConstraints);

        separator3.setPreferredSize(new java.awt.Dimension(520, 2));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        bodyPanel.add(separator3, gridBagConstraints);

        separator4.setPreferredSize(new java.awt.Dimension(520, 2));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        bodyPanel.add(separator4, gridBagConstraints);

        editorPanel.setOpaque(false);
        editorPanel.setLayout(new java.awt.GridLayout(1, 0, 20, 0));

        imageBtn.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        imageBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/add_photo_alternate.png"))); // NOI18N
        imageBtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        imageBtn.setBorderPainted(false);
        editorPanel.add(imageBtn);

        deleteBtn.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        deleteBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/delete.png"))); // NOI18N
        deleteBtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        deleteBtn.setBorderPainted(false);
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });
        editorPanel.add(deleteBtn);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        bodyPanel.add(editorPanel, gridBagConstraints);

        getContentPane().add(bodyPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        // Collect data from the fields
        String title = titleTxtField.getText();
        String contents = memoireTxtPane.getText();
        String category = (String) categoryCombox.getSelectedItem();

        // Check if fields are empty
        if (title.isEmpty() || contents.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Title and Contents cannot be empty.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Create Memoire object with the current data
        Memoire memoire = new Memoire(currentMemoireId, title, category, contents, new java.sql.Date(System.currentTimeMillis()), new java.sql.Timestamp(System.currentTimeMillis()));

        try {
            // Save memo (insert or update based on currentMemoireId)
            MemoireHelper.saveMemoire(memoire);
            JOptionPane.showMessageDialog(this, "Memoire saved successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);

            // After saving, set the ID of the memo to reflect the actual database ID (if it was newly created)
            if (currentMemoireId == 0) {
                // For new memos, set the ID from the database after insert
                currentMemoireId = memoire.getId(); // Get the generated ID for a new memo
            }
        } catch (HeadlessException | SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error saving memoire: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_saveBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // Check if a memo is selected (currentMemoireId should not be 0)
        if (currentMemoireId == 0) {
            // Show an error message if no memo is selected
            JOptionPane.showMessageDialog(this, "No memoire selected to delete.", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Do not proceed with deletion
        }

        // Ask for confirmation before deleting
        int confirm = JOptionPane.showConfirmDialog(this, 
                "Are you sure you want to delete this memoire?", 
                "Confirm Delete", 
                JOptionPane.YES_NO_OPTION);

        // If the user clicks "Yes" to confirm the deletion
        if (confirm == JOptionPane.YES_OPTION) {
            try {
                // Delete the memo from the database using the currentMemoireId
                MemoireHelper.deleteMemoire(currentMemoireId);

                // Show success message after deletion
                JOptionPane.showMessageDialog(this, "Memoire deleted successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);

                // After deletion, reset the form to allow creating or selecting a new memo
                resetForm();
            } catch (HeadlessException | SQLException ex) {
                // Show error message in case of any failure
                JOptionPane.showMessageDialog(this, 
                        "Error deleting memoire: " + ex.getMessage(), 
                        "Error", 
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WritingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WritingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WritingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WritingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new WritingFrame().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bodyPanel;
    private javax.swing.JComboBox<String> categoryCombox;
    private javax.swing.JLabel categoryLabel;
    private javax.swing.JPanel categoryPanel;
    private javax.swing.JLabel dateTimeInfoLabel;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JPanel editorPanel;
    private javax.swing.JButton imageBtn;
    private javax.swing.JScrollPane memoireScrollPane;
    private javax.swing.JTextPane memoireTxtPane;
    private javax.swing.JPanel memoireTxtPaneHelpPanel;
    private javax.swing.JButton saveBtn;
    private javax.swing.JSeparator separator3;
    private javax.swing.JSeparator separator4;
    private javax.swing.JTextField titleTxtField;
    private javax.swing.JPanel topPanel;
    // End of variables declaration//GEN-END:variables
    private void resetForm() {
        titleTxtField.setText("");  // Clear title field
        memoireTxtPane.setText("");  // Clear memo contents
        categoryCombox.setSelectedIndex(0);  // Reset category to the first item
        currentMemoireId = 0;  // Reset memo ID (no memo selected)
    }
}
