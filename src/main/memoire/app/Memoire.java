package main.memoire.app;

import java.sql.Date;
import java.sql.Timestamp;
import java.util.Objects;

public class Memoire {
    private int id;
    private String title;
    private String category;
    private String contents;
    private Date dayDateCreated; 
    private Timestamp lastEdited;

    // Constructor
    public Memoire(int id, String title, String category, String contents, Date dayDateCreated, Timestamp lastEdited) {
        this.id = id;
        this.title = (title == null || title.isEmpty()) ? "Untitled" : title;
        this.category = (category == null || category.isEmpty()) ? "No Category" : category;
        this.contents = (contents == null) ? "" : contents;
        this.dayDateCreated = dayDateCreated;
        this.lastEdited = lastEdited; //
    }
    
    // Overloaded constructor for creating new memos without an ID (ID is generated by the database)
    public Memoire(String title, String category, String contents) {
        this(0, title, category, contents, new Date(System.currentTimeMillis()), new Timestamp(System.currentTimeMillis()));
    }

    // Default constructor (for flexibility when creating objects)
    public Memoire() {
        this(0, "Untitled", "No Category", "", new Date(System.currentTimeMillis()), new Timestamp(System.currentTimeMillis()));
    }
    
    // Getters
    public int getId() {
        return id;
    }

    public String getTitle() {
        return title;
    }

    public String getCategory() {
        return category;
    }

    public String getContents() {
        return contents;
    }

    public Date getDayDateCreated() {
        return dayDateCreated;
    }

    public Timestamp getLastEdited() {
        return lastEdited;
    }

    // Setters
    public void setId(int id) {
        this.id = id;
    }

    public void setTitle(String title) {
        this.title = (title == null || title.isEmpty()) ? "Untitled" : title;
    }

    public void setCategory(String category) {
        this.category = (category == null || category.isEmpty()) ? "No Category" : category;
    }

    public void setContents(String contents) {
        this.contents = (contents == null) ? "" : contents;
        updateLastEdited(); // Automatically update the lastEdited timestamp when contents are changed
    }

    public void setDayDateCreated(Date dayDateCreated) {
        this.dayDateCreated = dayDateCreated;
    }

    public void setLastEdited(Timestamp lastEdited) {
        this.lastEdited = lastEdited;
    }
    
    // Update lastEdited timestamp to the current time
    private void updateLastEdited() {
        this.lastEdited = new Timestamp(System.currentTimeMillis());
    }

    // toString method for debugging or display purposes
    @Override
    public String toString() {
        return "Memoire{" +
                "id=" + id +
                ", title='" + title + '\'' +
                ", category='" + category + '\'' +
                ", contents='" + contents + '\'' +
                ", dayDateCreated=" + dayDateCreated +
                ", lastEdited=" + lastEdited +
                '}';
    }

    // equals and hashCode for object comparison and collection usage
    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (obj == null || getClass() != obj.getClass()) return false;
        Memoire memoire = (Memoire) obj;
        return id == memoire.id;
    }

    @Override
    public int hashCode() {
        return Objects.hash(id);
    }
}
